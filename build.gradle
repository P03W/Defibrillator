plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'org.cadixdev.licenser' version '0.6.0'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name 'Basique'
        url 'https://porez.ml/maven'
    }
    maven {
        name 'Jitpack'
        url 'https://jitpack.io'
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex 'io\\.github\\.onyxstudios.*'
        }
    }
    mavenLocal()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // FLK
    modImplementation "net.fabricmc:fabric-language-kotlin:1.6.0+kotlin.1.5.0"

    // Aegis
    modImplementation 'com.github.P03W:Aegis:3.0.0'
    include 'com.github.P03W:Aegis:3.0.0'

    // Microconfig
    modImplementation 'com.github.P03W:Microconfig:2.0.1'
    include 'com.github.P03W:Microconfig:2.0.1'

    // Ne-V-Seti
    modImplementation 'me.basiqueevangelist:ne-v-seti:0.1.5-1.17-pre1'
    include 'me.basiqueevangelist:ne-v-seti:0.1.5-1.17-pre1'

    // QueCee
    modImplementation 'com.github.p03w:quecee:2.0.1'
    include 'com.github.p03w:quecee:2.0.1'

    // Player Ability Lib
    modImplementation "io.github.ladysnake:PlayerAbilityLib:1.3.0-nightly.1.17-pre3"
    include "io.github.ladysnake:PlayerAbilityLib:1.3.0-nightly.1.17-pre3"
}

// Licenser
license {
    header = rootProject.file('LICENSE_FILE_HEADER')
    include '**/*.java'
    include '**/*.kt'
    it.style.java = 'BLOCK_COMMENT'
    it.style.kt = 'BLOCK_COMMENT'
}

processResources {
    inputs.property "version", project.version

    filesMatching("src/main/resources/fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from "LICENSE"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "16"

        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
    }
}
