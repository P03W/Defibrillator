plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'net.minecrell.licenser' version "0.4.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url 'https://jitpack.io'
    }
    mavenLocal()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // FLK
    modImplementation "net.fabricmc:fabric-language-kotlin:1.5.0+kotlin.1.4.31"

    // Aegis
    modImplementation 'com.github.P03W:Aegis:2.2.1'
    include 'com.github.P03W:Aegis:2.2.1'

    // Microconfig
    modImplementation 'com.github.P03W:Microconfig:2.0.1'
    include 'com.github.P03W:Microconfig:2.0.1'

    // Ne-V-Seti
    modImplementation 'com.github.BasiqueEvangelist:ne-v-seti:-SNAPSHOT'
    include 'com.github.BasiqueEvangelist:ne-v-seti:-SNAPSHOT'

    // QueCee
    modImplementation 'com.github.p03w:quecee:1.0.2'
    include 'com.github.p03w:quecee:1.0.2'
}

// Licenser
license {
    header = rootProject.file('LICENSE_FILE_HEADER')
    include '**/*.java'
    include '**/*.kt'
    style.java = 'BLOCK_COMMENT'
    style.kt = 'BLOCK_COMMENT'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"
